#!/bin/bash

while [[ $# -gt 0 ]]
do
	opt="$1"
	case $opt in 
		-f|--file)
			file="$2"
			shift
		;;
		-V|--view)
			view=1
		;;
		-S|--set)
			set=1
		;;
		-c|--comments)
			comments=1
		;;
		-m|--modify)
			modify=1
		;;
		-h|--help)
			echo -e "
panINI v1.0	Written by Bryce McNab

panINI (parse all INI) is an ini parser written in bash.

	panINI: pan is a common root word meaning "all", and frankly it makes the name a great food.

	-f|--file	Specify the ini file to parse.
	-V|--view	Display the ini contents in a table
	-S|--set	Sets all the settings in the configurations files as variables.
	-c|--comments	Displays all comments in the .ini file.
	-m|--modify	Modify value of key in ini file.
	-h|--help	Displays this page.

	Sections: ini files can contain \[sections\]. These are parsed as arrays with key=value set as an element in bash 3, and as associative arrays in bash 4.
"
		;;
	esac
	shift
done

bashVersion=$(echo ${BASH_VERSION%%[^0-9.]*} | grep -o ^[0-9]*)
if [[ $bashVersion == 3 ]]
then
	echo -e "\n!!! Warning: running in bash \"$BASH_VERSION\". The -S feature will not set sectioned variables into associative arrays. !!!\n" 
fi

## View ini file in a column format
if [[ $view == 1 ]]
then
	(echo -e "key=value\n----=----" && cat $file | grep -v "^;" | grep -v "^\[") | column -t -s "="
fi

## Set variables in ini files: use ". ./pini" to set variables in the current shell. 
if [[ $set == 1 ]]
then
	while read line
	do
		key=$(echo $line | awk -F "=" '{ print $1 }')
		commentOrNot=$(echo $key | grep -o "^\;")
		value=$(echo $line | awk -F "=" '{ print $2 }')

		if [[ $key =~ ^\[.*$ ]]
		then
			section=$(echo $key | sed "s/\[//g" | sed "s/\]//g")
			eval unset "${section}"
			if [[ $bashVersion == 3 ]]
			then
				declare -a "${section}"
			elif [[ $bashVersion == 4 ]]
			then
				declare -A "${section}"
			fi
		elif [[ ( "$key" != "" ) && ( "$commentOrNot" != ";" ) ]]
		then
			if [[ "$section" == "" ]]
			then
				declare "${key}"="${value}"
			else
				if [[ $bashVersion == 3 ]]
				then
					element=$(eval echo \${#$section[@]})
					eval $section[$element]="${key}=\"${value}\""
				elif [[ $bashVersion == 4 ]]
				then
					read "$section[$key]" <<< "$value"
				fi
			fi
		fi
	done < $file
fi

## View comments
if [[ $comments == 1 ]]
then
	while read line
	do
		echo $line | grep "^;"
	done < $file
fi

if [[ $change == 1 ]]
then
	keyLine=$(grep ${keyToChange})
	sed "s/${keyLine}/${keyToChange}=${valueToChange}/" $file
fi

# Clean variables
unset file view set comments section key value
